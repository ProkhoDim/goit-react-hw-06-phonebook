{"version":3,"sources":["common/Input/Input.module.css","component/ContactForm/ContactForm.module.css","redux/contacts/contacts-actions.js","common/Input/Input.js","component/ContactForm/ContactForm.js","component/Filter/Filter.js","component/ContactList/ContactList.js","App.js","redux/contacts/contacts-reducers.js","redux/store.js","index.js","component/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","payload","name","number","id","uuidv4","deleteContact","filterContacts","Input","value","text","onChange","className","styles","label","span","type","input","defaultProps","errorNotification","closeDelay","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","normilizedNumber","split","join","ContactForm","state","addContactClick","e","preventDefault","props","contactList","onSubmit","isContactExist","formReset","handleChange","target","setState","contacts","submitName","some","alert","this","contactForm","formBtn","Component","connect","items","dispatch","actions","filter","contactsFilter","contactsList","normilizedFilter","toLowerCase","includes","onDeleteContact","map","key","contactItem","contactItem_info","contactText","onClick","deleteBtn","length","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistStoreConfig","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,oBAAoB,MAAQ,uB,mBCAlFD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,UAAY,+BAA+B,UAAY,+BAA+B,QAAU,+B,kPCElJ,GACbC,WAAYC,YAAa,uBAAuB,kBAAuB,CACrEC,QAAS,CAAEC,KADmC,EAAGA,KAChCC,OAD6B,EAASA,OAC9BC,GAAIC,mBAE/BC,cAAeN,YAAa,0BAC5BO,eAAgBP,YAAa,oB,iBCJzBQ,EAAQ,SAAC,GAAqC,IAAnCN,EAAkC,EAAlCA,KAAMO,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAClC,OACE,oCACE,2BAAOC,UAAWC,IAAOC,OACvB,0BAAMF,UAAWC,IAAOE,MAAOL,GAC/B,2BACEM,KAAK,QACLd,KAAMA,EACNS,SAAUA,EACVF,MAAOA,EACPG,UAAWC,IAAOI,WAO5BT,EAAMU,aAAe,CACnBT,MAAO,IAUMD,I,EAAAA,ICtBTW,EAAoB,SAACT,EAAMU,GAAP,OACxBC,IAAMC,MAAMZ,EAAM,CAChBa,SAAU,aACVC,UAAWJ,EACXK,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,KAGRC,EAAmB,SAAA5B,GAAM,OAAIA,EAAO6B,MAAM,MAAMC,KAAK,KAErDC,E,4MACJC,MAAQ,CACNjC,KAAM,GACNC,OAAQ,I,EAGViC,gBAAkB,SAAAC,GAChBA,EAAEC,iBADmB,MAGI,EAAKH,MAAtBjC,EAHa,EAGbA,KAAMC,EAHO,EAGPA,OAHO,EAIa,EAAKoC,MAA/BC,EAJa,EAIbA,YAAaC,EAJA,EAIAA,SAEhBvC,GAASC,EAKT,EAAKuC,eAAeF,EAAatC,KACpCuC,EAAS,CAAEvC,OAAMC,WACjB,EAAKwC,aANLxB,EAAkB,mC,EAUtByB,aAAe,YAAkC,IAAD,IAA9BC,OAAU3C,EAAoB,EAApBA,KAAMO,EAAc,EAAdA,MACnB,WAATP,EAKJ,EAAK4C,SAAL,eAAiB5C,EAAO6B,EAAiBtB,KAJvC,EAAKqC,SAAL,eAAiB5C,EAAOO,K,EAO5BkC,UAAY,WACV,EAAKG,SAAS,CAAE5C,KAAM,GAAIC,OAAQ,M,EAGpCuC,eAAiB,SAACK,EAAUC,GAG1B,QAFyBD,EAASE,MAAK,gBAAG/C,EAAH,EAAGA,KAAH,OAAc8C,IAAe9C,OAIpEgD,MAAM,GAAD,OAAIF,EAAJ,6BACE,I,uDAGC,IAAD,EACkBG,KAAKhB,MAAtBjC,EADD,EACCA,KAAMC,EADP,EACOA,OAEd,OACE,0BAAMsC,SAAUU,KAAKf,gBAAiBxB,UAAWC,IAAOuC,aACtD,kBAAC,EAAD,CACElD,KAAK,OACLO,MAAOP,EACPQ,KAAK,OACLC,SAAUwC,KAAKP,eAEjB,kBAAC,EAAD,CACE1C,KAAK,SACLO,MAAON,EACPO,KAAK,SACLC,SAAUwC,KAAKP,eAEjB,4BAAQ5B,KAAK,SAASJ,UAAWC,IAAOwC,SAAxC,eAGA,kBAAC,IAAD,W,GAjEkBC,aA+EXC,eARS,SAAApB,GAAK,MAAK,CAChCK,YAAaL,EAAMY,SAASS,UAGH,SAAAC,GAAQ,MAAK,CACtChB,SAAU,SAAAxC,GAAO,OAAIwD,EAASC,EAAQ3D,WAAWE,QAGpCsD,CAA6CrB,GCrE7CqB,eARS,SAAApB,GAAK,MAAK,CAChCwB,OAAQxB,EAAMY,SAASY,WAGE,SAAAF,GAAQ,MAAK,CACtC9C,SAAU,SAAA0B,GAAC,OAAIoB,EAASC,EAAQnD,eAAe8B,EAAEQ,OAAOpC,YAG3C8C,EA1BA,SAAC,GAA0B,IAAxBI,EAAuB,EAAvBA,OAAQhD,EAAe,EAAfA,SACxB,OACE,oCACE,kBAAC,EAAD,CACET,KAAK,SACLQ,KAAK,wBACLD,MAAOkD,EACPhD,SAAUA,Q,gBCyBZiD,EAAiB,SAACC,EAAcF,GACpC,IAAMG,EAAmBH,EAAOI,cAChC,OAAOF,EAAaF,QAAO,qBAAGzD,KACvB6D,cAAcC,SAASF,OAcjBP,eAVS,SAAC,GAAD,QAAGR,SAAYS,EAAf,EAAeA,MAAOG,EAAtB,EAAsBA,OAAtB,MAAsC,CAC5DZ,SAAUa,EAAeJ,EAAOG,OAGP,SAAAF,GACzB,MAAO,CACLQ,gBAAiB,SAAAhE,GAAO,OAAIwD,EAASC,EAAQpD,cAAcL,QAIhDsD,EAjDK,SAAC,GAAmC,IAAjCR,EAAgC,EAAhCA,SAAUkB,EAAsB,EAAtBA,gBAC/B,OACE,wBAAIrD,UAAWC,IAAO2B,aACnBO,EAASmB,KAAI,gBAAGhE,EAAH,EAAGA,KAAME,EAAT,EAASA,GAAID,EAAb,EAAaA,OAAb,OACZ,wBAAIgE,IAAK/D,EAAIQ,UAAWC,IAAOuD,aAC7B,uBAAGxD,UAAWC,IAAOwD,kBAClBnE,EADH,KACU,0BAAMU,UAAWC,IAAOyD,aAAcnE,IAEhD,4BACEa,KAAK,SACLd,KAAK,SACLqE,QAAS,kBAAMN,EAAgB7D,IAC/BQ,UAAWC,IAAO2D,WAJpB,kBCcKjB,eALS,SAAApB,GAAK,MAAK,CAChCK,YAAaL,EAAMY,SAASS,MAC5BG,OAAQxB,EAAMY,SAASY,UAGVJ,EArBH,SAAC,GAA6B,IAA3Bf,EAA0B,EAA1BA,YAAamB,EAAa,EAAbA,OAC1B,OACE,yBAAK/C,UAAU,aACb,6BAASA,UAAU,eACjB,yCACA,kBAAC,EAAD,OAEF,iCACG4B,EAAYiC,OAAS,GAAK,yCACzBjC,EAAYiC,OAAS,GAAKd,IAAW,kBAAC,EAAD,MACtCnB,EAAYiC,OAAS,GAAK,kBAAC,EAAD,W,uCCP7BjB,EAAQkB,YAPY,CACxB,CAAEtE,GAAI,OAAQF,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEC,GAAI,OAAQF,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEC,GAAI,OAAQF,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEC,GAAI,OAAQF,KAAM,iBAAkBC,OAAQ,eAGrB,mBACxBuD,EAAQ3D,YAAa,SAACoC,EAAD,OAAUlC,EAAV,EAAUA,QAAV,4BAA4BkC,GAA5B,CAAmClC,OADhC,cAExByD,EAAQpD,eAAgB,SAAC6B,EAAD,OAAUlC,EAAV,EAAUA,QAAV,OACvBkC,EAAMwB,QAAO,qBAAGvD,KAAgBH,QAHT,IAMrB0D,EAASe,YAAc,GAAD,eACzBhB,EAAQnD,gBAAiB,SAACoE,EAAD,YAAM1E,YAGnB2E,cAAgB,CAAEpB,QAAOG,WCPlCkB,EAAU,YACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAK1DC,EAAqB,CACzBpB,IAAK,WACLqB,YACAC,UAAW,CAAC,WAGRC,EAAQC,YAAe,CAC3BC,QAAS,CACP7C,SAAU8C,YAAeN,EAAoBO,IAE/CjB,aACAkB,UAAUC,IAKG,GAAEC,UAFCC,YAAaR,GAEHA,SC7B5BS,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUX,MAAOA,EAAMA,OACrB,kBAAC,IAAD,CAAaY,QAAS,KAAML,UAAWP,EAAMO,WAC3C,kBAAC,EAAD,SAINM,SAASC,eAAe,U,kBChB1B3G,EAAOC,QAAU,CAAC,YAAc,iCAAiC,YAAc,iCAAiC,YAAc,iCAAiC,UAAY,kC","file":"static/js/main.137cc9ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Input_label__3N9B4\",\"span\":\"Input_span__3D6_p\",\"input\":\"Input_input__21UCy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1ySpP\",\"formLabel\":\"ContactForm_formLabel__2Hsg6\",\"formInput\":\"ContactForm_formInput__2bJ3y\",\"formBtn\":\"ContactForm_formBtn__3YLdT\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default {\n  addContact: createAction('contacts/addContact', ({ name, number }) => ({\n    payload: { name, number, id: uuidv4() },\n  })),\n  deleteContact: createAction('contacts/deleteContact'),\n  filterContacts: createAction('contacts/filter'),\n};\n","import React from 'react';\nimport styles from './Input.module.css';\nimport PropTypes from 'prop-types';\n\nconst Input = ({ name, value, text, onChange }) => {\n  return (\n    <>\n      <label className={styles.label}>\n        <span className={styles.span}>{text}</span>\n        <input\n          type=\"input\"\n          name={name}\n          onChange={onChange}\n          value={value}\n          className={styles.input}\n        />\n      </label>\n    </>\n  );\n};\n\nInput.defaultProps = {\n  value: '',\n};\n\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport styles from './ContactForm.module.css';\n\nimport actions from '../../redux/contacts/contacts-actions';\nimport Input from '../../common/Input';\n\nconst errorNotification = (text, closeDelay) =>\n  toast.error(text, {\n    position: 'top-center',\n    autoClose: closeDelay,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n\nconst normilizedNumber = number => number.split(/\\D/).join('');\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  addContactClick = e => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n    const { contactList, onSubmit } = this.props;\n\n    if (!name || !number) {\n      errorNotification(`Please, enter name and number!`);\n      return;\n    }\n\n    if (!this.isContactExist(contactList, name)) {\n      onSubmit({ name, number });\n      this.formReset();\n    }\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    if (name !== 'number') {\n      this.setState({ [name]: value });\n      return;\n    }\n\n    this.setState({ [name]: normilizedNumber(value) });\n  };\n\n  formReset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  isContactExist = (contacts, submitName) => {\n    const isNameInContacts = contacts.some(({ name }) => submitName === name);\n\n    if (!isNameInContacts) return false;\n\n    alert(`${submitName} is already in contacts`);\n    return true;\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.addContactClick} className={styles.contactForm}>\n        <Input\n          name=\"name\"\n          value={name}\n          text=\"name\"\n          onChange={this.handleChange}\n        />\n        <Input\n          name=\"number\"\n          value={number}\n          text=\"number\"\n          onChange={this.handleChange}\n        />\n        <button type=\"submit\" className={styles.formBtn}>\n          Add contact\n        </button>\n        <ToastContainer />\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contactList: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: payload => dispatch(actions.addContact(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport actions from '../../redux/contacts/contacts-actions';\nimport Input from '../../common/Input';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <>\n      <Input\n        name=\"filter\"\n        text=\"find contacts by name\"\n        value={filter}\n        onChange={onChange}\n      />\n    </>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(actions.filterContacts(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport styles from './ContactList.module.css';\nimport actions from '../../redux/contacts/contacts-actions';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={styles.contactList}>\n      {contacts.map(({ name, id, number }) => (\n        <li key={id} className={styles.contactItem}>\n          <p className={styles.contactItem_info}>\n            {name}: <span className={styles.contactText}>{number}</span>\n          </p>\n          <button\n            type=\"button\"\n            name=\"delete\"\n            onClick={() => onDeleteContact(id)}\n            className={styles.deleteBtn}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nconst contactsFilter = (contactsList, filter) => {\n  const normilizedFilter = filter.toLowerCase();\n  return contactsList.filter(({ name }) =>\n    name.toLowerCase().includes(normilizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: contactsFilter(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onDeleteContact: payload => dispatch(actions.deleteContact(payload)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './theme/global.css';\n\nimport ContactForm from './component/ContactForm';\nimport Filter from './component/Filter';\nimport ContactList from './component/ContactList';\n\nconst App = ({ contactList, filter }) => {\n  return (\n    <div className=\"Container\">\n      <section className=\"ContactForm\">\n        <h2>Phonebook</h2>\n        <ContactForm />\n      </section>\n      <section>\n        {contactList.length > 0 && <h2>Contacts</h2>}\n        {(contactList.length > 3 || filter) && <Filter />}\n        {contactList.length > 0 && <ContactList />}\n      </section>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  contactList: state.contacts.items,\n  filter: state.contacts.filter,\n});\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst itemsInitialState = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst items = createReducer(itemsInitialState, {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.filterContacts]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({ items, filter });\n","import storage from 'redux-persist/lib/storage';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport contactsReducer from './contacts/contacts-reducers';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst persistStoreConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(persistStoreConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nconst persistor = persistStore(store);\n\nexport default { persistor, store };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2YC9V\",\"contactItem\":\"ContactList_contactItem__2dKvl\",\"contactText\":\"ContactList_contactText__2afcq\",\"deleteBtn\":\"ContactList_deleteBtn__o9n8z\"};"],"sourceRoot":""}